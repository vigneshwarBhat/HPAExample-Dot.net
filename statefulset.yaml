apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: webapp-statefulset
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '80'
  labels:
    app: webapp
spec:
  selector:
    matchLabels:
      app: webapp # has to match .spec.template.metadata.labels
  serviceName: "webapp-service"
  replicas: 2 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
        - name: webapp
          image: vigneshwar11/hpaexample:v3
          resources:
              requests:
                  memory: "150M"
                  cpu: "20m"
              limits:
                  memory: "500M"
          ports:
            - containerPort: 80
              name: web-app
      
           
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '80'
spec:
  type: ClusterIP
  ports:
  - port: 80
    name: webapp-service
  clusterIP: None
  selector:
    app: webapp
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-statefulset-0
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '80'
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    statefulset.kubernetes.io/pod-name: webapp-statefulset-0
  ports:
    - protocol: TCP
      port: 80
      targetPort: web-app
      nodePort: 30200

---
apiVersion: v1
kind: Service
metadata:
  name: webapp-statefulset-1
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '80'
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    statefulset.kubernetes.io/pod-name: webapp-statefulset-1
  ports:
    - protocol: TCP
      port: 80
      targetPort: web-app
      nodePort: 30201